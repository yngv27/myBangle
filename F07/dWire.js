const startX = [ 10,  45,  10,  45 ];
const startY = [ 16,  16,  78,  78 ];
const nmX = [ 4, 42, 88, 126];
const nmY = [ 12, 12, 12, 12];
let rotate = false;

let xS = 0.25;
let yS = 0.25;

function setScale(x, y) {
  xS = x; yS = y;
}

function drawScaledPoly(arr, x, y) {
  let newArr = [];
  for(let i=0; i< arr.length; i+=2) {
    newArr[i] = Math.floor(arr[i]*xS) + x;
    newArr[i+1] =Math.floor(arr[i+1]*yS) + y;

    if(rotate) {
      let z = newArr[i];
      newArr[i] = 80 - newArr[i+1];
      newArr[i+1] = z;
    }
  }
  //console.log(JSON.stringify(newArr));
  g.fillPoly(newArr, false);
}

/** DIGITS **/

/* zero */
let draw0=new Uint8Array([
  1,20 ,
  20,1 ,
  100,1 ,
  119,20 ,
  119,220 ,
  100,239 ,
  20,239 ,
  1,220,
  1,20 ,
       
  10,22 , 
  10,218 ,
  22,230 ,
  98,230 ,
  110,218, 
  110,22,
  98,10 ,
  22,10 ,
  10,22, 22, 10
  ]);

/* one */
let draw1=new Uint8Array([
  30,239, 
  90,239, 
  90,230, 
  65,230, 
  65,1, 
  55,1 ,
  35,21, 
  35,31, 
  55,11,   
  55,230, 
  30,230,
  ]);

/* two */
let draw2=new Uint8Array([1,20, 
               20,1,
               100,1,
               119,20 ,
               119,100, 
               100,120, 
               22,120 ,
               10,132 ,
               10,218, 
               22,230 ,
               119,230, 
               119,239,

               20,239 ,
               1,220,
               1,130 ,
               22,110 ,
               98,110 ,
               110,98 ,
               110,22 ,
               98,10 ,
               22,10 ,
              12,20 ,
               1,20]);
/* three */

let draw3=new Uint8Array([
   1,20 ,
   20,1 ,
   100,1 ,
   119,20 ,
   119,100 ,
   105,115 ,

   119,130 ,
   119,220 ,
   100,239 ,
   20,239 ,
   1,220,

   1,220 ,
   12,220 ,
   22,230 ,
   98,230 ,
   110,218 ,
   110,132 ,
   99,120   ,
   45,120  ,
   45,110 ,
   98,110 ,
   110,98,
   110,22, 
   98,10 ,
   22,10 ,
   12,20 ,
   1,20]);

/* four */
let draw4=new Uint8Array([
  119,239 , 
  119,1,
  110,1,
110,110, 
  22,110 ,
  10,98 ,
  10,10 ,
  1,10 ,
  1,102 ,
  20,120 ,
  110,120,
110,239]);

let draw5= new Uint8Array([
  1,220 ,
  20,239 ,
  100,239 ,
  119,220 ,
  119,130 ,
  100,110 ,
  16,110 ,
  10,104 ,
  10,10 ,
  100,10 ,
  100,1,

  1,1 ,
  1,110, 
  12,120, 
  98,120 ,
  110,132 ,
  110,218 ,
  98,230 ,
  22,230 ,
  10,220 ,
  1,220,
  ]);
               
/* six */
let draw6 = new Uint8Array(
[
100,10 ,
  100,1 ,
  20,1 ,
  1,20 ,
  1,220 ,

  20,239 ,
  100,239 ,
  119,220 ,
  119,130 ,
  100,110 ,
  12,110,

  12,120 ,
  98,120 ,
  110,132 ,
  110,218 ,
  98,230 ,
  22,230 ,
  10,218 ,

  10,22 ,
  22,10 ,
  100,10,
]);

/* seven */
let draw7 = new Uint8Array([
  65,239, 
  65,155 ,
  100,120 , 
  119,100 ,
  119,1 ,

  100,1 ,
  20,1 ,
  1,1 ,
  1,22 , 

  10,22 ,
  10,10 ,
  22,10 ,
  98,10 ,
  110,10 ,
  110,22 ,

  110,98 ,
  98,110 ,
  55,153 ,
  55,239,
  ]);

let draw8 = new Uint8Array( [
  
   22,110,
  
   98,110 ,
   110,98 ,
  
   110,22,
   98, 10,
   22, 10, 
   10,22 ,
   10,98 ,
      22,110 ,
      22,120 ,
   1,99 ,
   1,20 ,

   20,1 ,
   100,1 ,
   119,20 ,
   119,100 ,
  /* top meets bottom */
   104,115 ,
   119,130 ,
   119,220 ,
   100,239 ,

   20,239 ,
   1,220 ,
   1,130 ,
  16,115 ,
  21,120,
   10,131 ,
   10,218 ,

   22,230 ,
   98,230 ,
   110,218 ,
   110,132  , 
   98,120 ,
   22,120 ,
  22, 110
   ]);
                
let draw9 = new Uint8Array(
  [ 
  20,230 ,
  20,239, 
  100,239, 
  119,220 ,
  119,20 ,

  100,1 ,
  20,1 ,
  1,20 ,
  1,110 ,
  20,130 ,
  108,130,

  108,120 ,
  22,120 ,
  10,108 ,
  10,22 ,
  22,10 ,
  98,10 ,
  110,22 ,

  110,218 ,
  98,230
  ]);



/** END DIGITS **/

function drawDigit(pos, dig, nm) {
  let x = nm ? nmX[pos] : startX[pos];
  let y = nm ? nmY[pos] : startY[pos];

  if(EMULATOR) x+= 80;
  const digStrs = [ draw0, draw1, draw2, draw3, draw4, draw5, draw6, draw7, draw8, draw9];
  drawScaledPoly(digStrs[dig],x,y);

}