//exports = {};

exports.connect = function(opts, callback) {
  const WF_PARTIAL = new Uint8Array(
    [
    0x0,0x40,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x80,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x40,0x40,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0xF,0x0,0x0,0x0,0x0,0x0,0x1,
    0x1,0x1,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x22,0x22,0x22,0x22,0x22,0x22,0x0,0x0,0x0,
    0x02,0x17,0x41,0xB0,0x32,0x28,
    ]);	

  var g = Graphics.createArrayBuffer(opts.width, opts.height, 1,{msb:true});
  var delays = [500, 900, 200]; // customizable for slower/faster e-inks (in lieu of using BUSY)
  if(opts.delays) delays=opts.delays;

  g.partial = false;
  
  function cmd(c, d) {
      opts.dc.reset();
      opts.spi.write(c, opts.cs);
      if (d !== undefined) {
          opts.dc.set();
          opts.spi.write(d, opts.cs);
      }
  }
  function init() { 
    if(opts.rst) {
      //digitalPulse(RST, 0, [100,100]);
      opts.rst.reset(); setTimeout(()=>{opts.rst.set();},50);
    }
    setTimeout(()=>{cmd(0x12);}, 100);
    g.partial = false;
  }

  function loadLUT1()
  {
    cmd(0x32, WF_PARTIAL.slice(0,153));
  }
  function loadLUT2()
  {
    cmd(0x3F, WF_PARTIAL[153]);
    cmd(0x03, WF_PARTIAL[154]);
    cmd(0x04, WF_PARTIAL.slice(155, 158)); 
    cmd(0x2C, WF_PARTIAL[158]);
    cmd(0x37, [0,0,0,0,0,0x40,0,0,0,0]); 
    cmd(0x3C, 0x80);
  }
  
  g.setPartial = function () {
    let to = 0;
    setTimeout(init, to); to+=delays[0];
    setTimeout(loadLUT1, to); to+=delays[0];
    setTimeout(loadLUT2, to); to+=delays[0];
    setTimeout(()=>{ g.partial = true; g.flip();}, to);
  };

  g.flip = function () {
    cmd(0x24); //write B/W
    opts.dc.set();
    opts.spi.write(new Uint8Array(g.buffer));
    if(g.partial) cmd(0x22, 0xCF); 
    cmd(0x20); // update
    return g;
  };
  
  g.flipR = function (partial) {
    cmd(0x26); //write RED
    opts.dc.set();
    var w = g.getWidth()>>3;
    for (var y=0;y<g.getHeight();y++) {
      //for( var x=0; x < g.getWidth()>>3; x++)
      opts.spi.write(new Uint8Array(g.buffer,y*w,w));//, opts.cs);
    }
    opts.dc.reset(); 
    if(g.partial) cmd(0x22, 0xCF); 
    cmd(0x20); 
    return g;

  };
  g.reset = init;

  g.sleep = function () { cmd(0x10, 1);};
  
  init();
  if(callback) setTimeout(callback, 250);
  return g;
};
/*
g = exports.connect({spi: spi1, cs: 0, dc: D28, rst: D14, width: 200, height: 200}, ()=>{
  g.setRotation(2,1);
  g.setBgColor(1).setColor(0);
  g.clear();
  g.flip();
  
});
*/