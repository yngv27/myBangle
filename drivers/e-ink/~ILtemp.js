exports = {};
exports.connect = (spi1, opts) => {
  delay = (ms) => {digitalPulse(D40, 1, ms); digitalPulse(D40,1,0);};
  let lut_full_mono = new Uint8Array(
  [
    0x50, 0xAA, 0x55, 0xAA, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  ]);
  let lut_partial = new Uint8Array(
  [
    0x10, 0x18, 0x18, 0x08, 0x18, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x44, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  ]);
  let lut_dc = new Uint8Array(
    [
    0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x05, 0x00, 0x32, 0x32, 
    0x00, 0x00, 0x02, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x05, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]);
  let lut_ww = new Uint8Array(
    [
          0x50, 0x0F, 0x0F, 0x00, 0x00, 0x05, 0x60, 0x32, 0x32, 0x00, 0x00, 0x02, 0xA0, 0x0F, 
    0x0F, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

      ]);
  let lut_bw = new Uint8Array(
    [
          0x50, 0x0F, 0x0F, 0x00, 0x00, 0x05, 0x60, 0x32, 0x32, 0x00, 0x00, 0x02, 0xA0, 0x0F, 
    0x0F, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

      ]);
  let lut_bb = new Uint8Array(
    [
          0xA0, 0x0F, 0x0F, 0x00, 0x00, 0x05, 0x60, 0x32, 0x32, 0x00, 0x00, 0x02, 0x50, 0x0F, 
    0x0F, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

      ]);
  let lut_wb = new Uint8Array(
    [
          0xA0, 0x0F, 0x0F, 0x00, 0x00, 0x05, 0x60, 0x32, 0x32, 0x00, 0x00, 0x02, 0x50, 0x0F, 
    0x0F, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

      ]);
  function stamp() {
    return Math.floor(Date().getTime() % 100000);
  }

  function cmd(c, d) {
    print(stamp() + " CMD: 0x"+c.toString(16));
      opts.dc.reset();
      spi1.write(c, opts.cs);
      if (d !== undefined) {
          opts.dc.set();
          spi1.write(d, opts.cs);
      }
  }
  
  var g = Graphics.createArrayBuffer(opts.width, opts.height ,1,{msb:true});
  
  g.flip = function (partial) {
    //setRefreshArea();
    init();
    setTimeout(()=>{
      cmd(0x10); 
      delay(2);
      opts.dc.set();
      spi1.write(new Uint8Array(g0.buffer), opts.cs);
      cmd(0x13); 
      delay(2);
      opts.dc.set();
      spi1.write(new Uint8Array(g.buffer), opts.cs);
      cmd(0x12);
      delay(50);
      //setTimeout(sleep, 150);
    }, 400);
    return g;
  };


  function sleep() { cmd(0x50, 0xf7); cmd(0x07, 0xa5); }
  
  function init() {
    opts.rst.reset(); 
    delay(200);
    //setTimeout(()=>{
      opts.rst.set();
    //},200);
    delay(200);
    //setTimeout(()=>{
      cmd(0x01, [0x03, 0x0, 0x2b, 0x2b, 0x09]);
      cmd(0x06, [0x7, 0x7, 0x17]);
      cmd(0xF8, [0x60, 0xA5]);
      cmd(0xF8, [0x89, 0xA5]);
      cmd(0xF8, [0x90, 0x00]);
      cmd(0xF8, [0x93, 0x2A]);
      cmd(0xF8, [0xA0, 0xA5]);
      cmd(0xF8, [0xA1, 0x00]);
      cmd(0xF8, [0x73, 0x41]);
    
      cmd(0x16, 0x00);//PARTIAL_DISPLAY_REFRESH
      cmd(0x04);//POWER_ON
    delay(200);
  
      //setTimeout(()=>{
        cmd(0x00, 0xAF);//PANEL_SETTING: KW-BF, KWR-AF, BWROTP 0f
        cmd(0x30, 0x3A);//PLL_CONTROL: 3A 100HZ, 29 150Hz, 39 200HZ, 31 171HZ
        cmd(0x82, 0x12);//VCM_DC_SETTING_REGISTER
        delay(2);

        cmd(0x20, lut_dc);// LUT_FOR_VCOM
        cmd(0x21, lut_ww);// LUT_WHITE_TO_WHITE   
        cmd(0x22, lut_bw);// LUT_BLACK_TO_WHITE
        cmd(0x23, lut_wb);// LUT_WHITE_TO_BLACK
        cmd(0x24, lut_bb);// LUT_BLACK_TO_BLACK
      //}, 200);
    //}, 400);
  }
  
  //init();
  g.cmd = cmd;
  g.reset = init;
  g.sleep = sleep;
  return g;
  
}; // end module

/* USAGE:
var spi1 = new SPI();
spi1.setup({sck: D18, mosi: D19, baud: 2000000});
opts = {
  cs: D9, //dummy
  dc: D28,
  rst: D11,
};
g=exports.connect(spi1, opts);
*/


let spi1 = new SPI();
// QY03
spi1.setup({sck: D45, mosi: D2, baud: 2000000});
var opts = {cs: D3, dc: D44, rst: D47, width: 176, height: 264};
g = exports.connect(spi1, opts);
  var g0 = Graphics.createArrayBuffer(opts.width, opts.height ,1,{msb:true});
  g0.setBgColor(-1).clear();
  g.setBgColor(-1).clear();





/*

g.cmd(0x10); 
opts.dc.set();
for(let x=0; x< 5808; x++) 
  spi1.write(0xff, opts.cs);
g.cmd(0x13); 
opts.dc.set();
spi1.write(new Uint8Array(g.buffer), opts.cs);
g.cmd(0x12);
delay(50);
*/
 